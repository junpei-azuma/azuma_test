plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openapi.generator' version '7.13.0'
}

group = 'org.example'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-database-postgresql'
    // JSON形式のログ出力
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

tasks.named('test') {
    useJUnitPlatform()
}

// jarファイルの名前を変更
def archiveName = 'my-application'
tasks.named('jar') {
    archiveBaseName.set(archiveName)
}
bootJar {
    archiveBaseName.set(archiveName)
}

openApiGenerate {
    generatorName = 'java'
    inputSpec = "${projectDir}/api_docs/openapi.yaml"
    outputDir = "${projectDir}"
    packageName = 'org.example.test'
    modelPackage = 'org.example.test.model'

    globalProperties = [
        models: "",
        modelDocs: "false",
        modelTests: "false",
    ]

    configOptions = [
        dateLibrary: 'java8',
        interfaceOnly: 'true',
        useTags: 'true',
        generateApis: 'true',
        generateModels: 'true',
        generateModelTests: 'false',
        generateModelDocumentation: 'false',
        useBeanValidation: 'true',
        performBeanValidation: 'false',
        library: 'native',
        // NOTE: GsonではなくJacksonを使用する
        serializationLibrary: 'jackson',
        // NOTE: JavaXではなくJakarta EEを使用する
        useJakartaEe: 'true',
        // NOTE: ApiClientを参照しないようにするための設定
        supportUrlQuery: 'false',
    ]
}