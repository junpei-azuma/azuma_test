/*
 * Task Creation API
 * タスクを操作するAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.example.test.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * CreateTaskRequest
 */
@JsonPropertyOrder({
  CreateTaskRequest.JSON_PROPERTY_TITLE,
  CreateTaskRequest.JSON_PROPERTY_COMPLETE_CONDITION,
  CreateTaskRequest.JSON_PROPERTY_START_DATE,
  CreateTaskRequest.JSON_PROPERTY_DUE_DATE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-20T14:29:42.993585103+09:00[Asia/Tokyo]", comments = "Generator version: 7.13.0")
public class CreateTaskRequest {
  public static final String JSON_PROPERTY_TITLE = "title";
  @jakarta.annotation.Nonnull
  private String title;

  public static final String JSON_PROPERTY_COMPLETE_CONDITION = "completeCondition";
  @jakarta.annotation.Nullable
  private String completeCondition;

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  @jakarta.annotation.Nonnull
  private LocalDate startDate;

  public static final String JSON_PROPERTY_DUE_DATE = "dueDate";
  @jakarta.annotation.Nonnull
  private LocalDate dueDate;

  public CreateTaskRequest() { 
  }

  public CreateTaskRequest title(@jakarta.annotation.Nonnull String title) {
    this.title = title;
    return this;
  }

  /**
   * The title of the task
   * @return title
   */
  @jakarta.annotation.Nonnull
  @NotNull
 @Size(min=1)
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(@jakarta.annotation.Nonnull String title) {
    this.title = title;
  }


  public CreateTaskRequest completeCondition(@jakarta.annotation.Nullable String completeCondition) {
    this.completeCondition = completeCondition;
    return this;
  }

  /**
   * The condition that must be met to complete the task
   * @return completeCondition
   */
  @jakarta.annotation.Nullable
 @Size(max=500)
  @JsonProperty(JSON_PROPERTY_COMPLETE_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCompleteCondition() {
    return completeCondition;
  }


  @JsonProperty(JSON_PROPERTY_COMPLETE_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompleteCondition(@jakarta.annotation.Nullable String completeCondition) {
    this.completeCondition = completeCondition;
  }


  public CreateTaskRequest startDate(@jakarta.annotation.Nonnull LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * The start date for the task
   * @return startDate
   */
  @jakarta.annotation.Nonnull
  @NotNull
  @Valid

  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public LocalDate getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartDate(@jakarta.annotation.Nonnull LocalDate startDate) {
    this.startDate = startDate;
  }


  public CreateTaskRequest dueDate(@jakarta.annotation.Nonnull LocalDate dueDate) {
    this.dueDate = dueDate;
    return this;
  }

  /**
   * The due date for the task
   * @return dueDate
   */
  @jakarta.annotation.Nonnull
  @NotNull
  @Valid

  @JsonProperty(JSON_PROPERTY_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public LocalDate getDueDate() {
    return dueDate;
  }


  @JsonProperty(JSON_PROPERTY_DUE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDueDate(@jakarta.annotation.Nonnull LocalDate dueDate) {
    this.dueDate = dueDate;
  }


  /**
   * Return true if this CreateTaskRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateTaskRequest createTaskRequest = (CreateTaskRequest) o;
    return Objects.equals(this.title, createTaskRequest.title) &&
        Objects.equals(this.completeCondition, createTaskRequest.completeCondition) &&
        Objects.equals(this.startDate, createTaskRequest.startDate) &&
        Objects.equals(this.dueDate, createTaskRequest.dueDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, completeCondition, startDate, dueDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateTaskRequest {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    completeCondition: ").append(toIndentedString(completeCondition)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

